git config --global user.name "Andrii"
git config --global user.email "Kostenkoandrey14@gmail.com"
git config --global --list
git remote set-url origin <URL>
git remote add origin git@github.com:Andrey19950/GitRepoRemotely.git

git branch -M main                # спочатку перейменовуємо дефолтну гілку master на main
git push -u origin main           # потім відправляємо зафіксовані зміни до віддаленого репозиторію у віддалену гілку main

git remote -v        # показать список удалённых репозиториев
git init             # инициализировать git-репозиторий
git status           # показать статус файлов
git add <filename>   # добавить файл в staging area
git add .            # добавить все файлы в текущей директории
git add -u           # добавить обновлённые и удалённые файлы
git add --all        # добавить все изменения (новые, изменённые, удалённые)
git commit -m "msg"  # сделать коммит с сообщением
git commit --amend   # изменить последний коммит (сообщение или файлы)
git commit           # открыть редактор для коммита вручную
git log              # просмотр истории коммитов
git log -n <quantity>        # показать указанное количество последних коммитов
git log --since=2.weeks      # показать коммиты за последние 2 недели
git log --author="author_name"  # показать коммиты, сделанные указанным автором

git branch               # показать локальные ветки
git branch -r            # показать только удалённые ветки
git branch -a            # показать все ветки (локальные и удалённые)

git checkout -b <branch> # создать и переключиться на новую ветку (старый способ)
git switch -c <branch>   # создать и переключиться на новую ветку (новый способ)
git switch <branch>      # переключиться на существующую ветку
git checkout <branch>    # тоже переключиться на ветку (старый способ)
git checkout <commit>    # перейти к коммиту (detached HEAD)

git branch -d <branch>   # удалить локальную ветку
git branch -D <branch>   # принудительно удалить ветку

git merge <branch>       # слить указанную ветку в текущую

git fetch                # скачать изменения с удалённого репо, но не применять
git pull                 # скачать и применить изменения из всех удалённых веток
git pull origin <branch> # скачать и применить изменения из конкретной ветки
git push origin main     # отправить локальные изменения ветки main на GitHub

git stash                         # временно сохранить незакоммиченные изменения
git stash save "my-comment"       # сохранить изменения со своим комментарием
git stash list                    # список всех сохранённых stash'ей
git stash pop                     # применить последний stash и удалить его
git stash apply stash@{56f4530}   # применить конкретный stash без удаления
git stash drop stash@{56f4530}    # удалить конкретный stash
git stash clear                   # удалить все stash'и безвозвратно












